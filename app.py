from flask import Flask, render_template, url_for, request, redirect, jsonify
from external_functions import send_telegram_message

app = Flask(__name__)

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏—Ü—Ü —Å –∏—Ö –¥–∞–Ω–Ω—ã–º–∏
pizzas = [
    {"id": 1, "name": "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "image": "margherita.png",
     "description": "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–∞–∑–∏–ª–∏–∫.", 'price':15},
    {"id": 2, "name": "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏", "image": "pepperoni.png",
     "description": "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏.", 'price':16},
    {"id": 3, "name": "–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞", "image": "four_cheese.png",
     "description": "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–∞—Ä–º–µ–∑–∞–Ω, –≥–æ—Ä–≥–æ–Ω–∑–æ–ª–∞, —ç–º–º–µ–Ω—Ç–∞–ª—å.", 'price':17},
    {"id": 4, "name": "–ì–∞–≤–∞–π—Å–∫–∞—è", "image": "hawaiian.png",
     "description": "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –∞–Ω–∞–Ω–∞—Å—ã, –≤–µ—Ç—á–∏–Ω–∞.", 'price':18}]

cart = []  # –ö–æ—Ä–∑–∏–Ω–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∏—Ü—Ü

@app.route("/")
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏—Ü—Ü."""
    return render_template("index.html", pizzas=pizzas)


@app.route("/pizza/<int:pizza_id>")
def pizza_detail(pizza_id):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∏—Ü—Ü–µ."""
    pizza = next((p for p in pizzas if p["id"] == pizza_id), None)
    if pizza:
        return render_template("pizza.html", pizza=pizza)
    return "–ü–∏—Ü—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", 404  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É 404, –µ—Å–ª–∏ –ø–∏—Ü—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞


@app.route("/cart", methods=["GET", "POST"])
def cart_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ—Ä–∑–∏–Ω—ã. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞."""
    if request.method == "POST":
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
        data = request.get_json()

        print("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data)  # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä


        address = data.get("address")  #   —ç—Ç–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É "address" –∏–∑ —Å–ª–æ–≤–∞—Ä—è data
        phone = data.get("phone")
        payment = data.get("payment")
        order = data.get("order", [])  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–æ–π)
        print('order = ', order) # [{'name': '–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞', 'quantity': 2, 'price': None}]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
        if not address or not phone:
            return jsonify({"success": False, "error": "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!"}), 400

        message = f"üõí *–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!*\n" \
                  f"üë§ *–ó–∞–∫–∞–∑—á–∏–∫:* {request.remote_addr}\n" \
                  f"üìç *–ê–¥—Ä–µ—Å:* {address}\n" \
                  f"üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {phone}\n" \
                  f"üí≥ *–û–ø–ª–∞—Ç–∞:* {payment}\n" \
                  f"üçï *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n"

        total_price = 0  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞

        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ
        for item in order:
            print('item = ', item)
            name = item.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä")
            quantity = item.get("quantity", 1)
            price = item.get("price", 0)
            total_price += price * quantity

            message += f"‚Ä¢ {name} x{quantity} - {price * quantity} ‚Ç¨\n"

        message += f"\nüí∞ *–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:* {total_price} ‚Ç¨"

        print('Telgram –°–æ–æ–±—â–µ–Ω–∏–µ = ', message)  # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–∫–∞–∑ –≤ –∫–æ–Ω—Å–æ–ª—å (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)

        send_telegram_message(message)

        # –°–∏–º—É–ª—è—Ü–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î)
        print(f"–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ê–¥—Ä–µ—Å: {address}, –¢–µ–ª–µ—Ñ–æ–Ω: {phone}, –û–ø–ª–∞—Ç–∞: {payment}")

        cart.clear()  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        return jsonify({"success": True})
################## –ß–∞—Å—Ç—å GET
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞
    print('cart = ', cart)
    total_price = sum(item['price'] for item in cart)
    return render_template("cart.html", cart=cart, total_price=total_price)


@app.route("/add-to-cart", methods=["POST"])
def add_to_cart():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∏—Ü—Ü—É –≤ –∫–æ—Ä–∑–∏–Ω—É."""
    data = request.get_json()
    print('data =', data)  #  data = {'pizza_id': '2', 'quantity': 2, 'price': 16}
    pizza_id = data.get("pizza_id")
    quantity = data.get("quantity")
    pizza_price = data.get("price")

    if not pizza_id or quantity is None:
        return jsonify(success=False, error="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"), 400

    pizza = next((p for p in pizzas if p["id"] == int(pizza_id)), None)
    if pizza:
        existing_pizza = next((item for item in cart if item["pizza_id"] == pizza_id), None)
        if existing_pizza:
            existing_pizza["quantity"] += quantity  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –µ—Å–ª–∏ –ø–∏—Ü—Ü–∞ —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        else:
            print('quantity = ', quantity)
            cart.append({"pizza_id": pizza_id, "name": pizza["name"], "quantity": quantity, 'price':pizza_price*quantity})
        return jsonify(success=True)

    return jsonify(success=False, error="–ü–∏—Ü—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"), 404


@app.route("/reset-cart", methods=["POST"])
def reset_cart():
    """–û—á–∏—â–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-–æ—Ç–≤–µ—Ç –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ."""
    cart.clear()
    return jsonify(success=True)
